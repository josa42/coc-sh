{
  "name": "coc-sh",
  "version": "0.8.0",
  "description": "sh extension for coc",
  "author": "josa@gesell.me",
  "license": "MIT",
  "main": "lib/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/josa42/coc-sh.git"
  },
  "engines": {
    "coc": "^0.0.81",
    "node": ">=12"
  },
  "keywords": [
    "coc.nvim",
    "languageserver",
    "bash-language-server",
    "sh",
    "bash"
  ],
  "scripts": {
    "clean": "rimraf lib",
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc --watch -p tsconfig.json",
    "prepare": "yarn clean && yarn build",
    "lint": "eslint . --ext .ts,.js",
    "link": "coc-dev link",
    "unlink": "coc-dev unlink",
    "test": "yarn lint"
  },
  "activationEvents": [
    "onLanguage:sh",
    "onCommand:sh.version"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "sh",
      "properties": {
        "sh.enable": {
          "type": "boolean",
          "default": true
        },
        "sh.commandPath": {
          "type": "string"
        },
        "bashIde.backgroundAnalysisMaxFiles": {
          "type": "number",
          "default": 500,
          "description": "Maximum number of files to analyze in the background. Set to 0 to disable background analysis.",
          "minimum": 0
        },
        "bashIde.explainshellEndpoint": {
          "type": "string",
          "default": "",
          "description": "Configure explainshell server endpoint in order to get hover documentation on flags and options."
        },
        "bashIde.globPattern": {
          "type": "string",
          "default": "**/*@(.sh|.inc|.bash|.command)",
          "description": "Glob pattern for finding and parsing shell script files in the workspace. Used by the background analysis features across files."
        },
        "bashIde.includeAllWorkspaceSymbols": {
          "type": "boolean",
          "default": false,
          "description": "Controls how symbols (e.g. variables and functions) are included and used for completion and documentation. If false (default and recommended), then we only include symbols from sourced files (i.e. using non dynamic statements like 'source file.sh' or '. file.sh'). If true, then all symbols from the workspace are included."
        },
        "bashIde.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warning",
            "error"
          ],
          "description": "Controls the log level of the language server."
        },
        "bashIde.shellcheckPath": {
          "type": "string",
          "default": "shellcheck",
          "description": "Controls the executable used for ShellCheck linting information. An empty string will disable linting."
        },
        "bashIde.shellcheckArguments": {
          "type": "string",
          "default": "",
          "description": "Additional ShellCheck arguments. Note that we already add the following arguments: --shell, --format, --external-sources."
        },
        "sh.trace.server": {
          "type": "string",
          "default": "off",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "description": "Traces the communication between coc.nvim and the bash-language-server"
        }
      }
    },
    "commands": [
      {
        "command": "sh.version",
        "title": "Print extension version"
      }
    ],
    "snippets": [
      {
        "language": "sh",
        "path": "./snippets/sh.json"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^17.0.41",
    "@typescript-eslint/eslint-plugin": "^5.27.1",
    "@typescript-eslint/parser": "^5.27.1",
    "coc-dev-tools": "^0.1.0",
    "coc.nvim": "0.0.81",
    "eslint": "^8.17.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.7.3"
  },
  "dependencies": {
    "bash-language-server": "4.6.2",
    "tslib": "^2.4.0"
  }
}
