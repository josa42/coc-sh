{
  "name": "coc-sh",
  "version": "1.2.4",
  "description": "sh extension for coc",
  "author": "josa@gesell.me",
  "license": "MIT",
  "main": "lib/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/josa42/coc-sh.git"
  },
  "engines": {
    "coc": "^0.0.82",
    "node": ">=16"
  },
  "keywords": [
    "coc.nvim",
    "languageserver",
    "bash-language-server",
    "sh",
    "bash"
  ],
  "scripts": {
    "clean": "rm -rf lib",
    "build": "tsc -p tsconfig.json",
    "build:watch": "tsc --watch -p tsconfig.json",
    "prepare": "npm run clean && npm run build",
    "lint": "eslint . --ext .ts,.js",
    "test": "npm run lint"
  },
  "activationEvents": [
    "onLanguage:sh",
    "onCommand:sh.version"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "sh",
      "properties": {
        "sh.enable": {
          "type": "boolean",
          "default": true
        },
        "sh.commandPath": {
          "type": "string"
        },
        "bashIde.backgroundAnalysisMaxFiles": {
          "type": "number",
          "default": 500,
          "description": "Maximum number of files to analyze in the background. Set to 0 to disable background analysis.",
          "minimum": 0
        },
        "bashIde.enableSourceErrorDiagnostics": {
          "type": "boolean",
          "default": false,
          "description": "Enable diagnostics for source errors. Ignored if includeAllWorkspaceSymbols is true."
        },
        "bashIde.explainshellEndpoint": {
          "type": "string",
          "default": "",
          "description": "Configure explainshell server endpoint in order to get hover documentation on flags and options."
        },
        "bashIde.globPattern": {
          "type": "string",
          "default": "**/*@(.sh|.inc|.bash|.command)",
          "description": "Glob pattern for finding and parsing shell script files in the workspace. Used by the background analysis features across files."
        },
        "bashIde.includeAllWorkspaceSymbols": {
          "type": "boolean",
          "default": false,
          "description": "Controls how symbols (e.g. variables and functions) are included and used for completion, documentation, and renaming. If false (default and recommended), then we only include symbols from sourced files (i.e. using non dynamic statements like 'source file.sh' or '. file.sh' or following ShellCheck directives). If true, then all symbols from the workspace are included."
        },
        "bashIde.logLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warning",
            "error"
          ],
          "description": "Controls the log level of the language server."
        },
        "bashIde.shellcheckPath": {
          "type": "string",
          "default": "shellcheck",
          "description": "Controls the executable used for ShellCheck linting information. An empty string will disable linting."
        },
        "bashIde.shellcheckArguments": {
          "type": "string",
          "default": "",
          "description": "Additional ShellCheck arguments. Note that we already add the following arguments: --shell, --format, --external-sources."
        },
        "bashIde.shfmt.path": {
          "type": "string",
          "default": "shfmt",
          "description": "Controls the executable used for Shfmt formatting. An empty string will disable formatting."
        },
        "bashIde.shfmt.ignoreEditorconfig": {
          "type": "boolean",
          "default": false,
          "description": "Ignore shfmt config options in .editorconfig (always use language server config)"
        },
        "bashIde.shfmt.languageDialect": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "bash",
            "posix",
            "mksh",
            "bats"
          ],
          "description": "Language dialect to use when parsing (bash/posix/mksh/bats)."
        },
        "bashIde.shfmt.binaryNextLine": {
          "type": "boolean",
          "default": false,
          "description": "Allow boolean operators (like && and ||) to start a line."
        },
        "bashIde.shfmt.caseIndent": {
          "type": "boolean",
          "default": false,
          "description": "Indent patterns in case statements."
        },
        "bashIde.shfmt.funcNextLine": {
          "type": "boolean",
          "default": false,
          "description": "Place function opening braces on a separate line."
        },
        "bashIde.shfmt.keepPadding": {
          "type": "boolean",
          "default": false,
          "description": "(Deprecated) Keep column alignment padding.",
          "markdownDescription": "**([Deprecated](https://github.com/mvdan/sh/issues/658))** Keep column alignment padding."
        },
        "bashIde.shfmt.simplifyCode": {
          "type": "boolean",
          "default": false,
          "description": "Simplify code before formatting."
        },
        "bashIde.shfmt.spaceRedirects": {
          "type": "boolean",
          "default": false,
          "description": "Follow redirection operators with a space."
        }
      }
    },
    "commands": [
      {
        "command": "sh.version",
        "title": "Print extension version"
      }
    ],
    "snippets": [
      {
        "language": "sh",
        "path": "./snippets/sh.json"
      }
    ]
  },
  "devDependencies": {
    "@types/node": "^20.8.8",
    "@typescript-eslint/eslint-plugin": "^6.9.0",
    "@typescript-eslint/parser": "^6.9.0",
    "coc.nvim": "0.0.82",
    "eslint": "^8.52.0",
    "typescript": "^5.2.2"
  },
  "dependencies": {
    "bash-language-server": "^5.0.0",
    "tslib": "^2.6.2"
  }
}
